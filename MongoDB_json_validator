db = db.getSiblingDB("salesTracking")

// this first collection has a validator, your project only requires _one_
db.createCollection("employee", {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			required: [ "employeeIDnum", "name", "address" ],
				properties:
				{
					employeeIDnum:
					{
						bsonType: "Number",
						description: "must be a int and is required"
					},
					name:
					{
						bsonType: "string",
						description: "must be a string and is required"
					},
					// we make use of MongoDBs ability to store nested objects
					address:
						{
							bsonType: "object",
							required: [ "street", "city", "state", "zip" ],
							properties: {
								// this is an optional property for extra street information (apartment number, etc)
								additional: {
								bsonType: "string",
								description: "must be a string if the field exists"
											},
								street: {
								bsonType: "string",
								description: "must be a string and is required"
									},
								city: {
									bsonType: "string",
									description: "must be a string and is required"
									},
								state: {
								bsonType: "string",
									description: "must be a string and is required"
									},
								zip: {
									bsonType: "string",
									description: "must be a string and is reuired"
										}
								}
						},
						phone: {
							bsonType: "string",
							description: "must be a string and is required"
						}
				}
			}
		}
	}
}

db.createCollection("inventory",
	{
	validator:
		{
		$jsonSchema:
			{
			bsonType: "object",
			required: [ "size", "price" ],
				properties:
				{
					size:
					{
						bsonType: "Number",
						description: "must be a int and is required"
					},
					price:
					{
						bsonType: "number",
						description: "must be a string and is required"
					},
				}
			}
		}
	}
)

db.createCollection("sales",
	{
		validator:
		{
		$jsonSchema:
			{
			bsonType: "object",
			required: [ "employeeIDnum", "date" ],
				properties:
				{
					employeeIDnum:
					{
						bsonType: "Number",
						description: "must be a int and is required"
					},
				}
			}
		}
	}
)
